# IDENTITY (ContextIdApplicationContextInitializer)
spring.application.index= 1001
spring.application.name= WechatPJ

server.port=8080

# SPRING CORE
# Skip search of BeanInfo classes.
spring.beaninfo.ignore=true

# MULTIPART (MultipartProperties)
# Enable support of multi-part uploads.
multipart.enabled=true
# Threshold after which files will be written to disk. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
multipart.file-size-threshold=0
# Intermediate location of uploaded files.
#multipart.location= 
# Max file size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
multipart.max-file-size=1Mb
# Max request size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
multipart.max-request-size=10Mb

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
# Network address to which the server should bind to.
server.address= 127.0.0.1
# If response compression is enabled.
server.compression.enabled=false
#server.compression.excluded-user-agents= # List of user-agents to exclude from compression.
#server.compression.mime-types= # Comma-separated list of MIME types that should be compressed. For instance `text/html,text/css,application/json`
#server.compression.min-response-size= # Minimum response size that is required for compression to be performed. For instance 2048
#server.context-parameters.*= # Servlet context init parameters. For instance `server.context-parameters.a=alpha`
#server.context-path= # Context path of the application.
# Display name of the application.
server.display-name=Wechat
# When to include a "stacktrace" attribute.
server.error.include-stacktrace=never
# Path of the error controller.
server.error.path=/error
# Enable the default error page displayed in browsers in case of a server error.
server.error.whitelabel.enabled=true
# The class name of the JSP servlet.
server.jsp-servlet.class-name=org.apache.jasper.servlet.JspServlet
#server.jsp-servlet.init-parameters.*= # Init parameters used to configure the JSP servlet
#server.jsp-servlet.registered=true # Whether or not the JSP servlet is registered
# Server HTTP port.
server.port=8080
#server.server-header= # The value sent in the server response header (uses servlet container default if empty)
#server.servlet-path=/ # Path of the main dispatcher servlet.
#server.session.cookie.comment= # Comment for the session cookie.
#server.session.cookie.domain= # Domain for the session cookie.
#server.session.cookie.http-only= # "HttpOnly" flag for the session cookie.
#server.session.cookie.max-age= # Maximum age of the session cookie in seconds.
#server.session.cookie.name= # Session cookie name.
#server.session.cookie.path= # Path of the session cookie.
#server.session.cookie.secure= # "Secure" flag for the session cookie.
#server.session.persistent=false # Persist session data between restarts.
#server.session.store-dir= # Directory used to store session data.
# Session timeout in seconds.
server.session.timeout= 600
# Session tracking modes (one or more of the following: "cookie", "url", "ssl").
#server.session.tracking-modes= "url"
#server.ssl.ciphers= # Supported SSL ciphers.
#server.ssl.client-auth= # Whether client authentication is wanted ("want") or needed ("need"). Requires a trust store.
server.ssl.enabled=false
#server.ssl.key-alias= #
#server.ssl.key-password= #
#server.ssl.key-store= #
#server.ssl.key-store-password= #
#server.ssl.key-store-provider= #
#server.ssl.key-store-type= #
#server.ssl.protocol= #
#server.ssl.trust-store= #
#server.ssl.trust-store-password= #
#server.ssl.trust-store-provider= #
#server.ssl.trust-store-type= #
# Directory in which log files are created. Can be relative to the tomcat base dir or absolute.
server.tomcat.accesslog.directory=logs
# Enable access log.
server.tomcat.accesslog.enabled=true
# Format pattern for access logs.
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
# Log file name prefix.
server.tomcat.accesslog.prefix=access_log
# Log file name suffix.
server.tomcat.accesslog.suffix=.log
# Delay in seconds between the invocation of backgroundProcess methods.
server.tomcat.background-processor-delay=30
# Tomcat base directory. If not specified a temporary directory will be used.
server.tomcat.basedir= 
#server.tomcat.internal-proxies=10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\
#        192\\.168\\.\\d{1,3}\\.\\d{1,3}|\\
#        169\\.254\\.\\d{1,3}\\.\\d{1,3}|\\
#        127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\
#        172\\.1[6-9]{1}\\.\\d{1,3}\\.\\d{1,3}|\\
#        172\\.2[0-9]{1}\\.\\d{1,3}\\.\\d{1,3}|\\
#        172\\.3[0-1]{1}\\.\\d{1,3}\\.\\d{1,3} # regular expression matching trusted IP addresses.
# Maximum size in bytes of the HTTP message header.
server.tomcat.max-http-header-size=100
# Maximum amount of worker threads.
server.tomcat.max-threads=100
# Name of the HTTP header used to override the original port value.
#server.tomcat.port-header=X-Forwarded-Port
#server.tomcat.protocol-header= # Header that holds the incoming protocol, usually named "X-Forwarded-Proto".
#server.tomcat.protocol-header-https-value=https # Value of the protocol header that indicates that the incoming request uses SSL.
#server.tomcat.remote-ip-header= # Name of the http header from which the remote ip is extracted. For instance `X-FORWARDED-FOR`
# Character encoding to use to decode the URI.
server.tomcat.uri-encoding=UTF-8
#server.undertow.accesslog.dir= # Undertow access log directory.
#server.undertow.accesslog.enabled=false # Enable access log.
#server.undertow.accesslog.pattern=common # Format pattern for access logs.
#server.undertow.buffer-size= # Size of each buffer in bytes.
#server.undertow.buffers-per-region= # Number of buffer per region.
#server.undertow.direct-buffers= # Allocate buffers outside the Java heap.
#server.undertow.io-threads= # Number of I/O threads to create for the worker.
#server.undertow.worker-threads= # Number of worker threads.
#server.use-forward-headers= # If X-Forwarded-* headers should be applied to the HttpRequest.

# SPRING MVC (WebMvcProperties)
# Amount of time (in milliseconds) before asynchronous request handling times out.
spring.mvc.async.request-timeout= 10000
# Date format to use. For instance `dd/MM/yyyy`.
spring.mvc.date-format= "yyy-MM-dd hh:mm:ss"
# Dispatch TRACE requests to the FrameworkServlet doService method.
spring.mvc.dispatch-trace-request=false
# Dispatch OPTIONS requests to the FrameworkServlet doService method.
spring.mvc.dispatch-options-request=false
# Enable resolution of favicon.ico.
spring.mvc.favicon.enabled=true
# If the content of the "default" model should be ignored during redirect scenarios.
spring.mvc.ignore-default-model-on-redirect=true
# Locale to use.
#spring.mvc.locale= "zh_CN"
#spring.mvc.media-types.*= # Maps file extensions to media types for content negotiation.
#spring.mvc.message-codes-resolver-format= # Formatting strategy for message codes. For instance `PREFIX_ERROR_CODE`.
# Path pattern used for static resources.
spring.mvc.static-path-pattern=/**
# If a "NoHandlerFoundException" should be thrown if no Handler was found to process a request.
spring.mvc.throw-exception-if-no-handler-found=false
# Spring MVC view prefix.
#spring.mvc.view.prefix= 
# Spring MVC view suffix.
#spring.mvc.view.suffix= 

# SPRING RESOURCES HANDLING (ResourceProperties)
# Enable default resource handling.
spring.resources.add-mappings=true
# Cache period for the resources served by the resource handler, in seconds.
spring.resources.cache-period= 30
# Enable caching in the Resource chain.
spring.resources.chain.cache=true
# Enable the Spring Resource Handling chain. Disabled by default unless at least one strategy has been enabled.
spring.resources.chain.enabled= true
# Enable HTML5 application cache manifest rewriting.
spring.resources.chain.html-application-cache=false
# Enable the content Version Strategy.
spring.resources.chain.strategy.content.enabled=false
# Comma-separated list of patterns to apply to the Version Strategy.
spring.resources.chain.strategy.content.paths=/**
# Enable the fixed Version Strategy.
spring.resources.chain.strategy.fixed.enabled=false
# Comma-separated list of patterns to apply to the Version Strategy.
#spring.resources.chain.strategy.fixed.paths= 
# Version string to use for the Version Strategy.
#spring.resources.chain.strategy.fixed.version=
# Locations of static resources.
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/

# THYMELEAF (ThymeleafAutoConfiguration)
#spring.thymeleaf.cache=true # Enable template caching.
#spring.thymeleaf.check-template-location=true # Check that the templates location exists.
#spring.thymeleaf.content-type=text/html # Content-Type value.
#spring.thymeleaf.enabled=true # Enable MVC Thymeleaf view resolution.
#spring.thymeleaf.encoding=UTF-8 # Template encoding.
#spring.thymeleaf.excluded-view-names= # Comma-separated list of view names that should be excluded from resolution.
#spring.thymeleaf.mode=HTML5 # Template mode to be applied to templates. See also StandardTemplateModeHandlers.
#spring.thymeleaf.prefix=classpath:/templates/ # Prefix that gets prepended to view names when building a URL.
#spring.thymeleaf.suffix=.html # Suffix that gets appended to view names when building a URL.
#spring.thymeleaf.template-resolver-order= # Order of the template resolver in the chain.
#spring.thymeleaf.view-names= # Comma-separated list of view names that can be resolved.

# DATA REST (RepositoryRestProperties)
#spring.data.rest.base-path= # Base path to be used by Spring Data REST to expose repository resources.
#spring.data.rest.default-page-size= # Default size of pages.
#spring.data.rest.enable-enum-translation= # Enable enum value translation via the Spring Data REST default resource bundle.
#spring.data.rest.limit-param-name= # Name of the URL query string parameter that indicates how many results to return at once.
#spring.data.rest.max-page-size= # Maximum size of pages.
#spring.data.rest.page-param-name= # Name of the URL query string parameter that indicates what page to return.
#spring.data.rest.return-body-on-create= # Return a response body after creating an entity.
#spring.data.rest.return-body-on-update= # Return a response body after updating an entity.
#spring.data.rest.sort-param-name= # Name of the URL query string parameter that indicates what direction to sort results.


# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# Do not stop if an error occurs while initializing the database.
spring.datasource.continue-on-error=false
#spring.datasource.data= # Data (DML) script resource reference.
# Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# Populate the database using 'data.sql'.
spring.datasource.initialize=true
#spring.datasource.jmx-enabled=false # Enable JMX support (if provided by the underlying pool).
#spring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username & password are ignored when set.
# For instance 100
spring.datasource.max-active= 100
# For instance 8
spring.datasource.max-idle=18
spring.datasource.max-wait=30
spring.datasource.min-evictable-idle-time-millis=10
spring.datasource.min-idle=8
# Platform to use in the schema resource (schema-${platform}.sql).
spring.datasource.platform=all
#spring.datasource.schema= # Schema (DDL) script resource reference.
# Statement separator in SQL initialization scripts.
spring.datasource.separator=;
# SQL scripts encoding.
#spring.datasource.sql-script-encoding="UTF-8"
#spring.datasource.test-on-borrow= # For instance `false`
#spring.datasource.test-on-return= # For instance `false`
#spring.datasource.test-while-idle= #
spring.datasource.time-between-eviction-runs-millis= 1
# Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
#spring.datasource.type= 
# JDBC url of the database.
spring.datasource.url= jdbc:mysql://localhost:3306/WechatPJ?characterEncoding=utf8&useSSL=false
# Name of the datasource.
#spring.datasource.name=WechatPJ
spring.datasource.username=root
# Login password of the database.
spring.datasource.password=111111
#spring.datasource.validation-query=

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
# Enable JPA repositories.
spring.data.jpa.repositories.enabled=true
# Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
spring.jpa.database=MYSQL
# Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.
#spring.jpa.database-platform=
# Initialize the schema on startup.
spring.jpa.generate-ddl=true
# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.
spring.jpa.hibernate.ddl-auto=update
# Naming strategy fully qualified name.
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
spring.jpa.open-in-view=true
# Additional native properties to set on the JPA provider.
#spring.jpa.properties.*= 
# Enable logging of SQL statements.
spring.jpa.show-sql=true
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# HTTP encoding (HttpEncodingProperties) 
# the encoding of HTTP requests/responses 
spring.http.encoding.charset=UTF-8
# enable http encoding support spring.http.encoding.force=true # force the configured encoding
spring.http.encoding.enabled=true
# force the configured encoding
spring.http.encoding.force=true

# ----------------------------------------
# DEVTOOLS PROPERTIES
# ----------------------------------------

# DEVTOOLS (DevToolsProperties)
# Enable a livereload.com compatible server.
#spring.devtools.livereload.enabled=true
## Server port.
#spring.devtools.livereload.port=35729
## Additional patterns that should be excluded from triggering a full restart.
#spring.devtools.restart.additional-exclude=
## Additional paths to watch for changes.
#spring.devtools.restart.additional-paths=
## Enable automatic restart.
#spring.devtools.restart.enabled=true
## Patterns that should be excluded from triggering a full restart.
#spring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,**/*Test.class,**/*Tests.class,git.properties
## Amount of time (in milliseconds) to wait between polling for classpath changes.
#spring.devtools.restart.poll-interval=1000
## Amount of quiet time (in milliseconds) required without any classpath changes before a restart is triggered.
#spring.devtools.restart.quiet-period=400
## Name of a specific file that when changed will trigger the restart check. If not specified any classpath file change will trigger the restart.
#spring.devtools.restart.trigger-file=

